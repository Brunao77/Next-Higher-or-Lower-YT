import Head from 'next/head'
import { useUser } from '../hooks/useUser'
import { AppLayout } from '../components/AppLayout'
import { ButtonLink } from '../components/ButtonLink'
import { Logo } from '../components/Logo'
import {
  loginWithGitHub,
  getHighScores,
  userSignOut,
  loginWithGoogle
} from '../firebase/client'
import { GitHub } from '../components/Icons/GitHub'
import { Google } from '../components/Icons/Google'
import { ButtonLogin } from '../components/ButtonLogin'
import { UserInfo } from '../components/UserInfo'
import { useState, useEffect } from 'react'
import { AiOutlinePoweroff } from 'react-icons/ai'
import { BsFillInfoCircleFill } from 'react-icons/bs'
import { Leaderboard } from '../components/Leaderboard'
import { GameInfo } from '../components/GameInfo'

export default function Home(props) {
  const user = useUser()
  const [leaderboard, setLeaderboard] = useState([])
  const [infoOpen, setInfoOpen] = useState(false)

  useEffect(() => {
    getHighScores().then(setLeaderboard)
  }, [])

  const handleLoginGithub = () => {
    loginWithGitHub().catch((error) => console.log(error))
  }
  const handleLoginGoogle = () => {
    loginWithGoogle().catch((error) => console.log(error))
  }
  const handleSignOutClick = () => {
    userSignOut()
  }
  const handleInfo = () => {
    setInfoOpen(!infoOpen)
  }

  return (
    <>
      <Head>
        <title>Higher or Lower YT</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logoWhite.ico" />
      </Head>
      <AppLayout>
        <Logo />
        <ButtonLink href="/playGame">PLAY</ButtonLink>
        {user === null ? (
          <>
            <ButtonLogin
              onClick={() => handleLoginGithub()}
              bg="#3d3d3d"
              color="#ffff"
            >
              <GitHub fill="#fff" width={24} height={24} />
              Sign in with GitHub
            </ButtonLogin>
            <ButtonLogin
              onClick={() => handleLoginGoogle()}
              bg="#FF5757"
              color="#ffff"
            >
              <Google fill="#fff" width={24} height={24} />
              Sign in with Google
            </ButtonLogin>
          </>
        ) : user === undefined ? null : (
          <>
            <UserInfo
              avatar={user.avatar}
              userName={user.userName}
              position="relative"
            />
            <div className="sign-out" onClick={handleSignOutClick}>
              <AiOutlinePoweroff color="#FFD7D7" size={30} />
            </div>
          </>
        )}
        <dix className="info-icon" onClick={handleInfo}>
          <BsFillInfoCircleFill color="#fff" size={50} />
        </dix>
        {infoOpen && (
          <GameInfo handleClose={handleInfo}>
            <p>
              Your goal is to guess if the video on the right has more or fewer
              views than the video on the left.
              <br />
              If you do not log in your highscore will not be saved and you will
              not participate in the world ranking
            </p>
          </GameInfo>
        )}
      </AppLayout>
      {leaderboard.length !== 0 && (
        <AppLayout>
          <Leaderboard leaderboard={leaderboard} />
        </AppLayout>
      )}
      <style jsx>
        {`
          div {
            display: flex;
            flex-direction: column;
          }
          .info-icon {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
            background-color: #000;
            border-radius: 999px;
            color: black;
            padding: 5px;
            font-weight: 400;
            cursor: pointer;
            margin-top: 10px;
            position: absolute;
            left: 95%;
            top: 3%;
            cursor: pointer;
            width: 50px;
            height: 50px;
          }
          .sign-out {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
            background-color: #ff7777;
            border-radius: 999px;
            color: black;
            padding: 5px;
            font-weight: 400;
            cursor: pointer;
            margin-top: 10px;
          }
          p {
            text-align: center;
            font-size: max(1vw, 15px);
            font-weight: 500;
            width: 90%;
            margin: 0;
          }
          @media (max-width: 850px) {
            .info-icon {
              top: 0;
              left: 0;
              position: relative;
            }
          }
        `}
      </style>
    </>
  )
}
